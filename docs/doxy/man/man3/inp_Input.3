.TH "inp::Input" 3 "Thu Apr 4 2019" "NLMech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
inp::Input \- A class to read input file\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <input\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBInput\fP (const std::string &filename)"
.br
.RI "\fIConstructor\&. \fP"
.in -1c
.PP
.RI "\fBAccessor methods\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBinp::FractureDeck\fP * \fBgetFractureDeck\fP ()"
.br
.RI "\fIGet the pointer to fracture deck\&. \fP"
.ti -1c
.RI "\fBinp::InitialConditionDeck\fP * \fBgetInitialConditionDeck\fP ()"
.br
.RI "\fIGet the pointer to initial condition deck\&. \fP"
.ti -1c
.RI "\fBinp::InteriorFlagsDeck\fP * \fBgetInteriorFlagsDeck\fP ()"
.br
.RI "\fIGet the pointer to interior flags deck\&. \fP"
.ti -1c
.RI "\fBinp::LoadingDeck\fP * \fBgetLoadingDeck\fP ()"
.br
.RI "\fIGet the pointer to loading deck\&. \fP"
.ti -1c
.RI "\fBinp::MassMatrixDeck\fP * \fBgetMassMatrixDeck\fP ()"
.br
.RI "\fIGet the pointer to mass matrix deck\&. \fP"
.ti -1c
.RI "\fBinp::MaterialDeck\fP * \fBgetMaterialDeck\fP ()"
.br
.RI "\fIGet the pointer to material deck\&. \fP"
.ti -1c
.RI "\fBinp::MeshDeck\fP * \fBgetMeshDeck\fP ()"
.br
.RI "\fIGet the pointer to mesh deck\&. \fP"
.ti -1c
.RI "\fBinp::ModelDeck\fP * \fBgetModelDeck\fP ()"
.br
.RI "\fIGet the pointer to model deck\&. \fP"
.ti -1c
.RI "\fBinp::NeighborDeck\fP * \fBgetNeighborDeck\fP ()"
.br
.RI "\fIGet the pointer to neighbor list deck\&. \fP"
.ti -1c
.RI "\fBinp::OutputDeck\fP * \fBgetOutputDeck\fP ()"
.br
.RI "\fIGet the pointer to output deck\&. \fP"
.ti -1c
.RI "\fBinp::PolicyDeck\fP * \fBgetPolicyDeck\fP ()"
.br
.RI "\fIGet the pointer to policy info deck\&. \fP"
.ti -1c
.RI "\fBinp::QuadratureDeck\fP * \fBgetQuadratureDeck\fP ()"
.br
.RI "\fIGet the pointer to quadrature deck\&. \fP"
.ti -1c
.RI "\fBinp::SolverDeck\fP * \fBgetSolverDeck\fP ()"
.br
.RI "\fIGet the pointer to solver deck\&. \fP"
.ti -1c
.RI "const std::string \fBgetSpatialDiscretization\fP ()"
.br
.RI "\fIGet the name of spatial discretization\&. \fP"
.in -1c
.in -1c
.SS "Private Member Functions"

.PP
.RI "\fBSetter methods\fP"
.br
Reads input file into the respective structs 
.PP
.in +1c
.in +1c
.ti -1c
.RI "void \fBsetFractureDeck\fP ()"
.br
.RI "\fIRead data into fracture deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetInitialConditionDeck\fP ()"
.br
.RI "\fIRead data into initial condition deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetInteriorFlagsDeck\fP ()"
.br
.RI "\fIRead data into interior flags deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetLoadingDeck\fP ()"
.br
.RI "\fIRead data into loading deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetMassMatrixDeck\fP ()"
.br
.RI "\fIRead data into mass matrix deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetMaterialDeck\fP ()"
.br
.RI "\fIRead data into material deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetMeshDeck\fP ()"
.br
.RI "\fIRead data into mesh deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetModelDeck\fP ()"
.br
.RI "\fIRead data into model deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetNeighborDeck\fP ()"
.br
.RI "\fIRead data into neighbor list deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetOutputDeck\fP ()"
.br
.RI "\fIRead data into output deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetPolicyDeck\fP ()"
.br
.RI "\fIRead data into policy deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetQuadratureDeck\fP ()"
.br
.RI "\fIRead data into quadrature deck and store its pointer\&. \fP"
.ti -1c
.RI "void \fBsetSolverDeck\fP ()"
.br
.RI "\fIRead data into solver deck and store its pointer\&. \fP"
.in -1c
.in -1c
.SS "Private Attributes"

.PP
.RI "\fBInternal data\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "std::string \fBd_inputFilename\fP"
.br
.RI "\fIName of input file\&. \fP"
.in -1c
.in -1c
.PP
.RI "\fBStruct data\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBinp::FractureDeck\fP * \fBd_fractureDeck_p\fP"
.br
.RI "\fIPointer to deck holding fracture related data\&. \fP"
.ti -1c
.RI "\fBinp::InitialConditionDeck\fP * \fBd_initialConditionDeck_p\fP"
.br
.RI "\fIPointer to deck holding initial condition related data\&. \fP"
.ti -1c
.RI "\fBinp::InteriorFlagsDeck\fP * \fBd_interiorFlagsDeck_p\fP"
.br
.RI "\fIPointer to deck holding interior flags information\&. \fP"
.ti -1c
.RI "\fBinp::LoadingDeck\fP * \fBd_loadingDeck_p\fP"
.br
.RI "\fIPointer to deck holding loading related data\&. \fP"
.ti -1c
.RI "\fBinp::MassMatrixDeck\fP * \fBd_massMatrixDeck_p\fP"
.br
.RI "\fIPointer to deck holding mass matrix calculation related data\&. \fP"
.ti -1c
.RI "\fBinp::MaterialDeck\fP * \fBd_materialDeck_p\fP"
.br
.RI "\fIPointer to deck holding material related data\&. \fP"
.ti -1c
.RI "\fBinp::MeshDeck\fP * \fBd_geometryDeck_p\fP"
.br
.RI "\fIPointer to deck holding geometry related data\&. \fP"
.ti -1c
.RI "\fBinp::ModelDeck\fP * \fBd_modelDeck_p\fP"
.br
.RI "\fIPointer to deck holding problem related data\&. \fP"
.ti -1c
.RI "\fBinp::NeighborDeck\fP * \fBd_neighborDeck_p\fP"
.br
.RI "\fIPointer to deck holding neighbor list related data\&. \fP"
.ti -1c
.RI "\fBinp::OutputDeck\fP * \fBd_outputDeck_p\fP"
.br
.RI "\fIPointer to deck holding output related data\&. \fP"
.ti -1c
.RI "\fBinp::PolicyDeck\fP * \fBd_policyDeck_p\fP"
.br
.RI "\fIPointer to deck holding policy related data\&. \fP"
.ti -1c
.RI "\fBinp::QuadratureDeck\fP * \fBd_quadratureDeck_p\fP"
.br
.RI "\fIPointer to deck holding quadrature point approximation related data\&. \fP"
.ti -1c
.RI "\fBinp::SolverDeck\fP * \fBd_solverDeck_p\fP"
.br
.RI "\fIPointer to deck holding solver related data\&. \fP"
.in -1c
.in -1c
.SH "Detailed Description"
.PP 
A class to read input file\&. 

In this class we create struct data types, and read input file and store in the respective structs\&. The class depends on the YAML library\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "inp::Input::Input (const std::string & filename)\fC [explicit]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP of input file 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "\fBinp::FractureDeck\fP * inp::Input::getFractureDeck ()"

.PP
Get the pointer to fracture deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBFractureDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::InitialConditionDeck\fP * inp::Input::getInitialConditionDeck ()"

.PP
Get the pointer to initial condition deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBInitialConditionDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::InteriorFlagsDeck\fP * inp::Input::getInteriorFlagsDeck ()"

.PP
Get the pointer to interior flags deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBInteriorFlagsDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::LoadingDeck\fP * inp::Input::getLoadingDeck ()"

.PP
Get the pointer to loading deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBLoadingDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::MassMatrixDeck\fP * inp::Input::getMassMatrixDeck ()"

.PP
Get the pointer to mass matrix deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBMassMatrixDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::MaterialDeck\fP * inp::Input::getMaterialDeck ()"

.PP
Get the pointer to material deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBMaterialDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::MeshDeck\fP * inp::Input::getMeshDeck ()"

.PP
Get the pointer to mesh deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to GeometryDeck 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::ModelDeck\fP * inp::Input::getModelDeck ()"

.PP
Get the pointer to model deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBModelDeck\fP 
.RE
.PP

.SS "\fBinp::NeighborDeck\fP * inp::Input::getNeighborDeck ()"

.PP
Get the pointer to neighbor list deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBNeighborDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::OutputDeck\fP * inp::Input::getOutputDeck ()"

.PP
Get the pointer to output deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBOutputDeck\fP 
.RE
.PP

.SS "\fBinp::PolicyDeck\fP * inp::Input::getPolicyDeck ()"

.PP
Get the pointer to policy info deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBPolicyDeck\fP 
.RE
.PP

.PP
Referenced by model::FDModel::initHObjects()\&.
.SS "\fBinp::QuadratureDeck\fP * inp::Input::getQuadratureDeck ()"

.PP
Get the pointer to quadrature deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBQuadratureDeck\fP 
.RE
.PP

.SS "\fBinp::SolverDeck\fP * inp::Input::getSolverDeck ()"

.PP
Get the pointer to solver deck\&. 
.PP
\fBReturns:\fP
.RS 4
Pointer to \fBSolverDeck\fP 
.RE
.PP

.SS "const std::string inp::Input::getSpatialDiscretization ()"

.PP
Get the name of spatial discretization\&. Return value can be of four kind:
.IP "\(bu" 2
'' (none)
.IP "\(bu" 2
finite_difference
.IP "\(bu" 2
weak_finite_element
.IP "\(bu" 2
nodal_finite_element
.IP "\(bu" 2
truss_finite_element
.PP
.PP
\fBReturns:\fP
.RS 4
Tag 
.RE
.PP

.SH "Field Documentation"
.PP 
.SS "\fBinp::FractureDeck\fP* inp::Input::d_fractureDeck_p\fC [private]\fP"

.PP
Pointer to deck holding fracture related data\&. E\&.g\&. pre-crack location and orientation, crack-path update frequency, etc 
.PP
Referenced by getFractureDeck(), and setFractureDeck()\&.
.SS "\fBinp::MeshDeck\fP* inp::Input::d_geometryDeck_p\fC [private]\fP"

.PP
Pointer to deck holding geometry related data\&. E\&.g\&. dimension, discretization type, mesh file, etc 
.PP
Referenced by getMeshDeck(), and setMeshDeck()\&.
.SS "\fBinp::InitialConditionDeck\fP* inp::Input::d_initialConditionDeck_p\fC [private]\fP"

.PP
Pointer to deck holding initial condition related data\&. E\&.g\&. initial condition function type for velocity and displacement, parameters to compute initial condition function, projection method or interpolation method, etc 
.PP
Referenced by getInitialConditionDeck(), and setInitialConditionDeck()\&.
.SS "\fBinp::LoadingDeck\fP* inp::Input::d_loadingDeck_p\fC [private]\fP"

.PP
Pointer to deck holding loading related data\&. E\&.g\&. displacement loading information, force loading information, etc 
.PP
Referenced by getLoadingDeck(), and setLoadingDeck()\&.
.SS "\fBinp::MassMatrixDeck\fP* inp::Input::d_massMatrixDeck_p\fC [private]\fP"

.PP
Pointer to deck holding mass matrix calculation related data\&. E\&.g\&. mass matrix approximation type 
.PP
Referenced by getMassMatrixDeck(), and setMassMatrixDeck()\&.
.SS "\fBinp::MaterialDeck\fP* inp::Input::d_materialDeck_p\fC [private]\fP"

.PP
Pointer to deck holding material related data\&. E\&.g\&. type of material, influence function information, parameters, etc 
.PP
Referenced by getMaterialDeck(), and setMaterialDeck()\&.
.SS "\fBinp::ModelDeck\fP* inp::Input::d_modelDeck_p\fC [private]\fP"

.PP
Pointer to deck holding problem related data\&. E\&.g\&. type of simulation (central-difference, velocity-verlet, implicit) etc 
.PP
Referenced by getModelDeck(), getSpatialDiscretization(), setInteriorFlagsDeck(), and setModelDeck()\&.
.SS "\fBinp::NeighborDeck\fP* inp::Input::d_neighborDeck_p\fC [private]\fP"

.PP
Pointer to deck holding neighbor list related data\&. E\&.g\&. factor of safety, volume correction, etc 
.PP
Referenced by getNeighborDeck(), and setNeighborDeck()\&.
.SS "\fBinp::OutputDeck\fP* inp::Input::d_outputDeck_p\fC [private]\fP"

.PP
Pointer to deck holding output related data\&. E\&.g\&. output frequency, output file format, output element-node connectivity flag, etc 
.PP
Referenced by getOutputDeck(), and setOutputDeck()\&.
.SS "\fBinp::PolicyDeck\fP* inp::Input::d_policyDeck_p\fC [private]\fP"

.PP
Pointer to deck holding policy related data\&. E\&.g\&. level of restriction in memory allocation, etc 
.PP
Referenced by getPolicyDeck(), and setPolicyDeck()\&.
.SS "\fBinp::QuadratureDeck\fP* inp::Input::d_quadratureDeck_p\fC [private]\fP"

.PP
Pointer to deck holding quadrature point approximation related data\&. E\&.g\&. order of approximation, order of approximation for mass matrix 
.PP
Referenced by getQuadratureDeck(), and setQuadratureDeck()\&.
.SS "\fBinp::SolverDeck\fP* inp::Input::d_solverDeck_p\fC [private]\fP"

.PP
Pointer to deck holding solver related data\&. E\&.g\&. solver parameters like tolerance, maximum iterations, solver type, etc 
.PP
Referenced by getSolverDeck(), and setSolverDeck()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for NLMech from the source code\&.
