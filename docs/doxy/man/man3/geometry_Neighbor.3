.TH "geometry::Neighbor" 3 "Thu Apr 4 2019" "NLMech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
geometry::Neighbor \- A class to store neighbor list and provide access to the list\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <neighbor\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNeighbor\fP (\fBinp::NeighborDeck\fP *deck)"
.br
.RI "\fIConstructor\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBinp::NeighborDeck\fP * \fBd_neighborDeck_p\fP"
.br
.RI "\fIInterior flags deck\&. \fP"
.ti -1c
.RI "std::vector< std::vector< size_t > > \fBd_neighbors\fP"
.br
.RI "\fIVector of list of neighbors for each node\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A class to store neighbor list and provide access to the list\&. 

Currently, nested vector is used for list\&. However, this is not memory efficient, as the vectors have small memory overhead and the total overhead then is N times the overhead of vector, where N is the number of nodes\&. When N is large, the total overhead becomes very large\&.
.PP
\fBNote:\fP
.RS 4
Require further memory optimization\&. 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "geometry::Neighbor::Neighbor (\fBinp::NeighborDeck\fP * deck)\fC [explicit]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIdeck\fP Input deck which contains user-specified information 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for NLMech from the source code\&.
