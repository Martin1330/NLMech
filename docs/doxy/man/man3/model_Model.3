.TH "model::Model" 3 "Thu Apr 4 2019" "NLMech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
model::Model \- A base class for different models\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <model\&.h>\fP
.PP
Inherited by \fBmodel::FDModel\fP\&.
.SS "Public Member Functions"

.PP
.RI "\fBCommon methods\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "virtual size_t \fBcurrentStep\fP ()"
.br
.RI "\fIReturn the current time step\&. \fP"
.ti -1c
.RI "virtual float \fBgetEnergy\fP ()"
.br
.RI "\fIReturn the total energy\&. \fP"
.in -1c
.in -1c
.SS "Private Attributes"

.PP
.RI "\fBMajor simulation data\fP"
.br
Major simulation data are those which play direct role in the simulation and without declaring these simulation will not work\&. For Peridynamics, displacement at current time, velocity at current time, and total force are the major simulation data\&.
.PP
For state-based peridynamics, we also need hydrostatic strain at current time\&. If we choose we can remove this data from major simulation list, however, this will increase the computational load\&.
.PP
In addition to major simulation data listed here, there are data in other classes, for example nodal data \fBfe::Mesh::d_nodes\fP in \fBfe::Mesh\fP, which are also necessary for the simulation\&. 
.PP
.in +1c
.in +1c
.ti -1c
.RI "std::vector< \fButil::Point3\fP > \fBd_u\fP"
.br
.RI "\fIDisplacement of the nodes\&. \fP"
.ti -1c
.RI "std::vector< \fButil::Point3\fP > \fBd_v\fP"
.br
.RI "\fIVelocity of the nodes\&. \fP"
.ti -1c
.RI "std::vector< \fButil::Point3\fP > \fBd_f\fP"
.br
.RI "\fITotal force on the nodes\&. \fP"
.ti -1c
.RI "std::vector< double > \fBd_hS\fP"
.br
.RI "\fIHydrostatic strains at the nodes\&. \fP"
.ti -1c
.RI "size_t \fBd_n\fP"
.br
.RI "\fICurrent time step\&. \fP"
.in -1c
.in -1c
.PP
.RI "\fBMinor simulation data\fP"
.br
These datas are postprocessing data and have no role in simulation\&. Since they do not play direct role in simulation, we can compromise in their accuracy and use 'float' instead of 'double'\&. 
.PP
.in +1c
.in +1c
.ti -1c
.RI "std::vector< float > \fBd_e\fP"
.br
.RI "\fIEnergy of the nodes\&. \fP"
.ti -1c
.RI "std::vector< float > \fBd_w\fP"
.br
.RI "\fIWork done on each of the nodes\&. \fP"
.ti -1c
.RI "std::vector< float > \fBd_phi\fP"
.br
.RI "\fIDamage function $ \phi $ at the nodes\&. \fP"
.ti -1c
.RI "std::vector< float > \fBd_Z\fP"
.br
.RI "\fIDamage function $ Z $ at the nodes\&. \fP"
.ti -1c
.RI "std::vector< float > \fBd_eF\fP"
.br
.RI "\fIFracture energy of the nodes\&. \fP"
.ti -1c
.RI "std::vector< float > \fBd_eFB\fP"
.br
.RI "\fIBond-based fracture energy of the nodes\&. \fP"
.ti -1c
.RI "std::vector< \fButil::SymMatrix3\fP > \fBd_strain\fP"
.br
.RI "\fIStrains of the nodes\&. \fP"
.ti -1c
.RI "std::vector< \fButil::SymMatrix3\fP > \fBd_stress\fP"
.br
.RI "\fIStress of the nodes\&. \fP"
.ti -1c
.RI "float \fBd_te\fP"
.br
.RI "\fITotal internal energy\&. \fP"
.ti -1c
.RI "float \fBd_tw\fP"
.br
.RI "\fITotal work done\&. \fP"
.ti -1c
.RI "float \fBd_tk\fP"
.br
.RI "\fITotal kinetic energy\&. \fP"
.ti -1c
.RI "float \fBd_teF\fP"
.br
.RI "\fITotal fracture energy\&. \fP"
.ti -1c
.RI "float \fBd_teFB\fP"
.br
.RI "\fITotal bond-based fracture energy\&. \fP"
.in -1c
.in -1c
.SH "Detailed Description"
.PP 
A base class for different models\&. 

This class provides a base for specific models, such as \fBFDModel\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "size_t model::Model::currentStep ()\fC [virtual]\fP"

.PP
Return the current time step\&. 
.PP
\fBReturns:\fP
.RS 4
Time step 
.RE
.PP

.PP
Reimplemented in \fBmodel::FDModel\fP\&.
.SS "float model::Model::getEnergy ()\fC [virtual]\fP"

.PP
Return the total energy\&. 
.PP
\fBReturns:\fP
.RS 4
Total energy 
.RE
.PP

.PP
Reimplemented in \fBmodel::FDModel\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for NLMech from the source code\&.
