.TH "fe::BaseElem" 3 "Thu Apr 4 2019" "NLMech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fe::BaseElem \- A base class to compute and store quadrature data\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <baseElem\&.h>\fP
.PP
Inherited by \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBBaseElem\fP (size_t order, size_t element_type)"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "size_t \fBgetElemType\fP ()"
.br
.RI "\fIGet element type\&. \fP"
.ti -1c
.RI "size_t \fBgetQuadOrder\fP ()"
.br
.RI "\fIGet order of quadrature approximation\&. \fP"
.ti -1c
.RI "size_t \fBgetNumQuadPoints\fP ()"
.br
.RI "\fIGet number of quadrature points in the data\&. \fP"
.ti -1c
.RI "virtual std::vector< \fBfe::QuadData\fP > \fBgetQuadPoints\fP (const std::vector< \fButil::Point3\fP > &nodes)=0"
.br
.RI "\fIGet vector of quadrature data\&. \fP"
.ti -1c
.RI "virtual std::vector< double > \fBgetShapes\fP (const \fButil::Point3\fP &p)=0"
.br
.RI "\fIReturns the values of shape function at point p\&. \fP"
.ti -1c
.RI "virtual std::vector< std::vector< double > > \fBgetDerShapes\fP (const \fButil::Point3\fP &p)=0"
.br
.RI "\fIReturns the values of derivative of shape function\&. \fP"
.ti -1c
.RI "virtual double \fBmapRefElemToElem\fP (\fButil::Point3\fP &p, const std::vector< double > &shapes, const std::vector< std::vector< double >> &der_shapes, const std::vector< \fButil::Point3\fP > &nodes)=0"
.br
.RI "\fIMaps the point on reference element to given element and returns the determinant of Jacobian\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "virtual void \fBinit\fP ()=0"
.br
.RI "\fICompute the quadrature points\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "size_t \fBd_quadOrder\fP"
.br
.RI "\fIOrder of quadrature point integration approximation\&. \fP"
.ti -1c
.RI "size_t \fBd_numQuadPts\fP"
.br
.RI "\fINumber of quadrature points for order d_quadOrder\&. \fP"
.ti -1c
.RI "size_t \fBd_elemType\fP"
.br
.RI "\fIElement type\&. \fP"
.ti -1c
.RI "std::vector< \fBfe::QuadData\fP > \fBd_quads\fP"
.br
.RI "\fI\fBQuadrature\fP data collection\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A base class to compute and store quadrature data\&. 

This class provides methods such as quadrature points for integration, shape functions at quadrature points, and derivative of shape functions\&.
.PP
\fBSee also:\fP
.RS 4
\fBTriElem\fP, \fBQuadElem\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "fe::BaseElem::BaseElem (size_t order, size_t element_type)"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIorder\fP Order of quadrature point approximation 
.br
\fIelement_type\fP Type of element in the mesh 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "virtual std::vector<std::vector<double> > fe::BaseElem::getDerShapes (const \fButil::Point3\fP & p)\fC [pure virtual]\fP"

.PP
Returns the values of derivative of shape function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Location of point 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of derivative of shape functions 
.RE
.PP

.PP
Implemented in \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.PP
Referenced by getNumQuadPoints()\&.
.SS "size_t fe::BaseElem::getElemType ()\fC [inline]\fP"

.PP
Get element type\&. 
.PP
\fBReturns:\fP
.RS 4
type Type of element 
.RE
.PP

.SS "size_t fe::BaseElem::getNumQuadPoints ()\fC [inline]\fP"

.PP
Get number of quadrature points in the data\&. 
.PP
\fBReturns:\fP
.RS 4
N Number of quadrature points 
.RE
.PP

.SS "size_t fe::BaseElem::getQuadOrder ()\fC [inline]\fP"

.PP
Get order of quadrature approximation\&. 
.PP
\fBReturns:\fP
.RS 4
order Order of approximation 
.RE
.PP

.SS "virtual std::vector<\fBfe::QuadData\fP> fe::BaseElem::getQuadPoints (const std::vector< \fButil::Point3\fP > & nodes)\fC [pure virtual]\fP"

.PP
Get vector of quadrature data\&. Given vertices of an element, where element type is same as what is specified in the constructor of \fBQuadrature\fP class, it returns the vector of quadrature data\&.
.PP
\fBParameters:\fP
.RS 4
\fInodes\fP Vector of vertices of an element 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of \fBQuadData\fP 
.RE
.PP

.PP
Implemented in \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.PP
Referenced by getNumQuadPoints()\&.
.SS "virtual std::vector<double> fe::BaseElem::getShapes (const \fButil::Point3\fP & p)\fC [pure virtual]\fP"

.PP
Returns the values of shape function at point p\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Location of point 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of shape functions at point p 
.RE
.PP

.PP
Implemented in \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.PP
Referenced by getNumQuadPoints()\&.
.SS "void fe::BaseElem::init ()\fC [private]\fP, \fC [pure virtual]\fP"

.PP
Compute the quadrature points\&. This must be implemented by inheriting classes\&. 
.PP
Implemented in \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.PP
Referenced by getNumQuadPoints()\&.
.SS "virtual double fe::BaseElem::mapRefElemToElem (\fButil::Point3\fP & p, const std::vector< double > & shapes, const std::vector< std::vector< double >> & der_shapes, const std::vector< \fButil::Point3\fP > & nodes)\fC [pure virtual]\fP"

.PP
Maps the point on reference element to given element and returns the determinant of Jacobian\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Given point in reference element which is to be mapped 
.br
\fIshapes\fP Vector shape functions evaluated at the point p 
.br
\fIder_shapes\fP Vector of derivative of shape functions at point p 
.br
\fInodes\fP Coordinates of vertices of a given element 
.RE
.PP
\fBReturns:\fP
.RS 4
det(J) Determinant of the Jacobian 
.RE
.PP

.PP
Implemented in \fBfe::QuadElem\fP, and \fBfe::TriElem\fP\&.
.PP
Referenced by getNumQuadPoints()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for NLMech from the source code\&.
