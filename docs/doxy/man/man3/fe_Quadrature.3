.TH "fe::Quadrature< T >" 3 "Thu Apr 4 2019" "NLMech" \" -*- nroff -*-
.ad l
.nh
.SH NAME
fe::Quadrature< T > \- A class for quadrature related operations\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <quadrature\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQuadrature\fP (size_t order)"
.br
.RI "\fIConstructor\&. \fP"
.ti -1c
.RI "size_t \fBgetElemType\fP ()"
.br
.RI "\fIGet element type\&. \fP"
.ti -1c
.RI "size_t \fBgetQuadOrder\fP ()"
.br
.RI "\fIGet order of quadrature approximation\&. \fP"
.ti -1c
.RI "size_t \fBgetNumQuadPoints\fP ()"
.br
.RI "\fIGet number of quadrature points in the data\&. \fP"
.ti -1c
.RI "std::vector< double > \fBgetShapes\fP (const \fButil::Point3\fP &p)"
.br
.RI "\fIReturns the values of shape function at point p\&. \fP"
.ti -1c
.RI "std::vector< std::vector< double > > \fBgetDerShapes\fP (const \fButil::Point3\fP &p)"
.br
.RI "\fIReturns the values of derivative of shape function\&. \fP"
.ti -1c
.RI "double \fBmapRefElemToElem\fP (\fButil::Point3\fP &p, const std::vector< double > &shapes, const std::vector< std::vector< double >> &der_shapes, const std::vector< \fButil::Point3\fP > &nodes)"
.br
.RI "\fIMaps the point on reference element to given element and returns the determinant of Jacobian\&. \fP"
.ti -1c
.RI "std::vector< \fBfe::QuadData\fP > \fBgetQuadPoints\fP (const std::vector< \fButil::Point3\fP > &nodes)"
.br
.RI "\fIGet vector of quadrature data\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "T * \fBd_element_p\fP"
.br
.RI "\fIElement which computes quadrature point and shape functions\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class fe::Quadrature< T >"
A class for quadrature related operations\&. 

In this class we store the global quadrature approximation information such as order of quadrature approximation, number of quadrature point per element, quadrature data for reference element\&.
.PP
This class also provides method for obtaining quadrature points and quadrature weights\&.
.PP
\fBNote:\fP
.RS 4
Currently, only triangle and quadrangle elements are supported\&. 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBfe::Quadrature\fP< T >::\fBQuadrature\fP (size_t order)\fC [explicit]\fP"

.PP
Constructor\&. 
.PP
\fBParameters:\fP
.RS 4
\fIorder\fP Order of quadrature approximation 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<class T > std::vector< std::vector< double > > \fBfe::Quadrature\fP< T >::getDerShapes (const \fButil::Point3\fP & p)"

.PP
Returns the values of derivative of shape function\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Location of point 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of derivative of shape functions 
.RE
.PP

.SS "template<class T > size_t \fBfe::Quadrature\fP< T >::getElemType ()"

.PP
Get element type\&. 
.PP
\fBReturns:\fP
.RS 4
type Type of element 
.RE
.PP

.SS "template<class T > size_t \fBfe::Quadrature\fP< T >::getNumQuadPoints ()"

.PP
Get number of quadrature points in the data\&. 
.PP
\fBReturns:\fP
.RS 4
N Number of quadrature points 
.RE
.PP

.SS "template<class T > size_t \fBfe::Quadrature\fP< T >::getQuadOrder ()"

.PP
Get order of quadrature approximation\&. 
.PP
\fBReturns:\fP
.RS 4
order Order of approximation 
.RE
.PP

.SS "template<class T > std::vector< \fBfe::QuadData\fP > \fBfe::Quadrature\fP< T >::getQuadPoints (const std::vector< \fButil::Point3\fP > & nodes)"

.PP
Get vector of quadrature data\&. Given vertices of an element, where element type is same as what is specified in the constructor of \fBQuadrature\fP class, it returns the vector of quadrature data\&.
.PP
\fBParameters:\fP
.RS 4
\fInodes\fP Vector of vertices of an element 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of \fBQuadData\fP
.RE
.PP
\fBNote:\fP
.RS 4
This depends on the element type that is already set in the constructor of \fBQuadrature\fP class\&.
.PP
Caller needs to ensure that order does not go higher than 5 as at present only upto fifth order quadrature points are implemented\&. 
.RE
.PP

.PP
Referenced by testTriRef()\&.
.SS "template<class T > std::vector< double > \fBfe::Quadrature\fP< T >::getShapes (const \fButil::Point3\fP & p)"

.PP
Returns the values of shape function at point p\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Location of point 
.RE
.PP
\fBReturns:\fP
.RS 4
Vector of shape functions at point p 
.RE
.PP

.SS "template<class T > double \fBfe::Quadrature\fP< T >::mapRefElemToElem (\fButil::Point3\fP & p, const std::vector< double > & shapes, const std::vector< std::vector< double >> & der_shapes, const std::vector< \fButil::Point3\fP > & nodes)"

.PP
Maps the point on reference element to given element and returns the determinant of Jacobian\&. 
.PP
\fBParameters:\fP
.RS 4
\fIp\fP Given point in reference element which is to be mapped 
.br
\fIshapes\fP Vector shape functions evaluated at the point p 
.br
\fIder_shapes\fP Vector of derivative of shape functions at point p 
.br
\fInodes\fP Coordinates of vertices of a given element 
.RE
.PP
\fBReturns:\fP
.RS 4
det(J) Determinant of the Jacobian 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for NLMech from the source code\&.
